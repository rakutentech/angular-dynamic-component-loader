{"version":3,"file":"rak-angular-dynamic-component-loader.umd.js","sources":["../../../../projects/angular-dynamic-component-loader/src/lib/angular-dynamic-component-loader.service.ts","../../../../projects/angular-dynamic-component-loader/src/public-api.ts","../../../../projects/angular-dynamic-component-loader/src/rak-angular-dynamic-component-loader.ts"],"sourcesContent":["import {ApplicationRef, ComponentFactoryResolver, ComponentRef, Injectable, Injector, Type} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DynamicComponentLoaderService {\n  constructor(private componentFactoryResolver: ComponentFactoryResolver, private appRef: ApplicationRef, private injector: Injector) {\n  }\n\n  /**\n   * Loads a dynamic Angular component instance of given type T\n   *\n   * @param component - The class name of the dynamically loaded component\n   * @param [data] - Data of the dynamic component\n   * @param [shouldAttachView] - If true, the component's view will be attached to a viewContainer\n   * @param [injector] - This provides local injections to a dynamic component instance\n   * @returns A new ComponentRef instance\n   */\n  loadComponent<T>(component: Type<T>, data: {} = {}, shouldAttachView: boolean = true, injector?: Injector): ComponentRef<T> {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n    const newComponentRef = componentFactory.create(injector || this.injector);\n\n    Object.assign(newComponentRef.instance, data);\n\n    if (shouldAttachView) {\n      this.appRef.attachView(newComponentRef.hostView);\n    }\n\n    return newComponentRef;\n  }\n}\n","/*\n * Public API Surface of angular-dynamic-component-loader\n */\n\nexport * from './lib/angular-dynamic-component-loader.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Injectable"],"mappings":";;;;;;;QAME,uCAAoB,wBAAkD,EAAU,MAAsB,EAAU,QAAkB;YAA9G,6BAAwB,GAAxB,wBAAwB,CAA0B;YAAU,WAAM,GAAN,MAAM,CAAgB;YAAU,aAAQ,GAAR,QAAQ,CAAU;SACjI;;;;;;;;;;QAWD,qDAAa,GAAb,UAAiB,SAAkB,EAAE,IAAa,EAAE,gBAAgC,EAAE,QAAmB;YAApE,qBAAA,EAAA,SAAa;YAAE,iCAAA,EAAA,uBAAgC;YAClF,IAAM,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;YAC1F,IAAM,eAAe,GAAG,gBAAgB,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;YAE3E,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAE9C,IAAI,gBAAgB,EAAE;gBACpB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;aAClD;YAED,OAAO,eAAe,CAAC;SACxB;;;8GAxBU,6BAA6B;yEAA7B,6BAA6B,WAA7B,6BAA6B,mBAF5B,MAAM;;6BAEP,6BAA6B;sBAHzCA,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;ICJD;;;;ICAA;;;;;;;;;;;;;;"}